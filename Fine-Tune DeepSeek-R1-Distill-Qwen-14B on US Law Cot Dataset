{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "使用自己的法律CoT数据集微调DeepSeek-14B模型"
      ],
      "metadata": {
        "id": "wIMB8sGivUgn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.环境设置和身份验证"
      ],
      "metadata": {
        "id": "vadAKTGjva7_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.1 安装依赖项\n",
        "- 说明：这里我推荐Unsloth这个加速微调（快至少2倍，内存使用减少70%）的框架。"
      ],
      "metadata": {
        "id": "RyZ0QFDIvxQg"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rbMbANJD7dT3",
        "outputId": "6a0dcaf8-d222-4db5-b404-2dc51b111dcb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: unsloth in /usr/local/lib/python3.11/dist-packages (2025.2.12)\n",
            "Collecting git+https://github.com/unslothai/unsloth.git\n",
            "  Cloning https://github.com/unslothai/unsloth.git to /tmp/pip-req-build-l_lidxzf\n",
            "  Running command git clone --filter=blob:none --quiet https://github.com/unslothai/unsloth.git /tmp/pip-req-build-l_lidxzf\n",
            "  Resolved https://github.com/unslothai/unsloth.git to commit d1d15f1d14f1168837d29b9c08e9b6d63945d469\n",
            "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Building wheels for collected packages: unsloth\n",
            "  Building wheel for unsloth (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for unsloth: filename=unsloth-2025.2.12-py3-none-any.whl size=187179 sha256=70fa2ba6688a8af11719941b8ba72b24979b82c50eb9b6ce0d2836aff202c4d7\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-rirufywa/wheels/d1/17/05/850ab10c33284a4763b0595cd8ea9d01fce6e221cac24b3c01\n",
            "Successfully built unsloth\n",
            "Installing collected packages: unsloth\n",
            "  Attempting uninstall: unsloth\n",
            "    Found existing installation: unsloth 2025.2.12\n",
            "    Uninstalling unsloth-2025.2.12:\n",
            "      Successfully uninstalled unsloth-2025.2.12\n",
            "Successfully installed unsloth-2025.2.12\n"
          ]
        }
      ],
      "source": [
        "!pip install unsloth\n",
        "!pip install --force-reinstall --no-cache-dir --no-deps git+https://github.com/unslothai/unsloth.git"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "b. 登录 Hugging Face 和 Weights & Biases"
      ],
      "metadata": {
        "id": "267iA_VFwMD2"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "KkYILmJb7qhG"
      },
      "outputs": [],
      "source": [
        "from huggingface_hub import login\n",
        "hf_token = \"你的HuggingFace Token\" #输入你的Huggingface Token以登录获得开源模型及后续模型发布操作\n",
        "login(hf_token)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import wandb\n",
        "wb_token = \"你的WanDB Token\" #输入你的Wandb以登录获得训练监控\n",
        "wandb.login(key=wb_token)\n",
        "run = wandb.init(\n",
        "    project='Fine-tune-DeepSeek-R1-Distill-Qwen-14B on Legal CoT Dataset',\n",
        "    job_type=\"training\",\n",
        "    anonymous=\"allow\"\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "FDDObJXAwLwk",
        "outputId": "e32d96f6-0a5e-4488-8e27-fb640a57a0c2"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m Calling wandb.login() after wandb.init() has no effect.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "c.加载DeepSeek-R1-Distill-Qwen-14B模型并以单条数据进行测试"
      ],
      "metadata": {
        "id": "AqrOSaDnxosW"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 153,
          "referenced_widgets": [
            "ed6a759916f04b43bcf6c4a46f24ebcd",
            "9bac0a383e2346a5981f5fd1d5ebdc71",
            "78b9a327688346079cc5438fc9ef1c75",
            "8260431e15d54367acf95cb5b1abd800",
            "bd964af153e54555b0b7a39acdbf39f8",
            "fb20601ab7524ecfa873cabedbe539e7",
            "2544c35d0e084c65bb3f73e6e55dd25d",
            "9cbea1e2927f42b0a1204a03fdd1e753",
            "4afcf77ee1d04e9d9e0389e84975a2cf",
            "5d5e981541c54fe3b484d131d138d571",
            "393a1e26ed1940ddaa2d625151362107"
          ]
        },
        "id": "bEHoQGeI8d1F",
        "outputId": "c297d2db-86f7-486b-c4b8-b1243b6afcc3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==((====))==  Unsloth 2025.2.12: Fast Qwen2 patching. Transformers: 4.48.3.\n",
            "   \\\\   /|    GPU: NVIDIA A100-SXM4-40GB. Max memory: 39.557 GB. Platform: Linux.\n",
            "O^O/ \\_/ \\    Torch: 2.6.0+cu124. CUDA: 8.0. CUDA Toolkit: 12.4. Triton: 3.2.0\n",
            "\\        /    Bfloat16 = TRUE. FA [Xformers = 0.0.29.post3. FA2 = False]\n",
            " \"-____-\"     Free Apache license: http://github.com/unslothai/unsloth\n",
            "Unsloth: Fast downloading is enabled - ignore downloading bars which are red colored!\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "ed6a759916f04b43bcf6c4a46f24ebcd"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "from unsloth import FastLanguageModel\n",
        "\n",
        "max_seq_length = 64000\n",
        "dtype = None\n",
        "load_in_4bit = False\n",
        "model, tokenizer = FastLanguageModel.from_pretrained(\n",
        "    model_name = \"unsloth/DeepSeek-R1-Distill-Qwen-14B\",\n",
        "    max_seq_length = max_seq_length,\n",
        "    dtype = dtype,\n",
        "    token = hf_token,\n",
        ")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：14B模型包含有3个模型权重文件构成，合计约15GB。\n",
        "\n"
      ],
      "metadata": {
        "id": "sSd09711yZ2G"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "d,测试单条数据"
      ],
      "metadata": {
        "id": "WXQ13U0-x2KK"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "VINq8oLs8gu9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "30028625-e9b3-4f76-aecd-ef1b2dc802bd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "<think>\n",
            "Okay, so I'm trying to figure out whether American Consulting can win the case against Schuck. Let me start by understanding the facts and the legal issues involved.\n",
            "\n",
            "First, Schuck was employed as a safety instructor and signed an employment agreement. She underwent training paid for by the company. The training took a total of 13.5 days: 1 day of videos and quizzes, and 12.5 days of shadow training. She was paid $9 per hour during this training. \n",
            "\n",
            "Section 12 of the agreement says that if she leaves within 12 months of the training, she has to pay back a portion of the cost based on how much time has passed. If she leaves in less than three months, she has to pay the full $3,000. American Consulting is asking her to pay half of that, which is $1,500.\n",
            "\n",
            "Schuck resigned after about five months. The trial court found that Section 12 was a penalty provision and only awarded them $468, which is half of the damages calculated based on her salary during training. Now, they're appealing, so I need to determine if the trial court was correct or if American Consulting can recover more.\n",
            "\n",
            "I think the key issue here is whether Section 12 is a valid liquidated damages clause or if it's a penalty. Liquidated damages are allowed if they're reasonable and based on actual damages, while penalties are not enforceable because they're seen as punishment rather than compensation.\n",
            "\n",
            "So, to determine this, I should look at whether the $3,000 is a reasonable way to compensate American Consulting for the loss they might suffer from Schuck leaving early. They provided training that's specific to her job, but she left after five months. The trial court calculated the damages based on her salary during training, which was 13 days at 8 hours a day at $9 per hour, totaling $936, and then halved it to $468 because they were only seeking half of the $3,000.\n",
            "\n",
            "I'm wondering if the $3,000 is proportional to the actual loss. Her salary during training was $936, so requiring her to pay $1,500 seems like more than that. Maybe the court thought that the $3,000 was a penalty because it's higher than the actual damages. Alternatively, the company might argue that the training investment was more significant because they not only paid her salary during training but also provided specialized training that could benefit her future employers.\n",
            "\n",
            "Another point is whether the training was the only consideration for her employment or if there were other factors. If the training was a significant part of her compensation, then maybe the clause is seen as part of her salary, making the repayment a penalty.\n",
            "\n",
            "I also need to consider the jurisdiction's laws. Some states have specific rules about liquidated damages in employment contracts. If the state where this case is being heard generally disfavors such clauses, the court might side with the employee.\n",
            "\n",
            "So, putting this together, the trial court found it to be a penalty, which suggests that the amount is excessive compared to the actual damages. Since Schuck only worked five months, the company didn't lose a full year of her services, so the $3,000 might not be justified. The calculation based on her salary during training seems more reasonable, hence the $468 award.\n",
            "\n",
            "Therefore, I think the trial court was correct in its decision, and American Consulting won't win the appeal because the clause is a penalty, not liquidated damages. They should only recover the actual damages, which are less than the full $3,000.\n",
            "</think>\n",
            "\n",
            "**Response:**\n",
            "\n",
            "The trial court's decision that Section 12 of the employment agreement constitutes a penalty rather than liquidated damages is likely correct. Here's the reasoning:\n",
            "\n",
            "1. **Liquidated Damages vs. Penalty:** Liquidated damages are permissible if they are reasonable and proportionate to the actual loss. Penalties, however, are not enforceable as they serve a punitive purpose.\n",
            "\n",
            "2. **Proportionality of Damages:** Schuck's training cost the company $3,000, but her salary during training was $936. The court calculated damages based on her salary, resulting in $468, which is half of the $936. The $3,000 figure in Section 12 exceeds this actual loss, suggesting it is a penalty.\n",
            "\n",
            "3. **Nature of Training:** The training provided was specific to her role, but the company's investment (salary during training) was $936. The repayment clause may be seen as excessive compared to the actual loss.\n",
            "\n",
            "4. **Jurisdictional Considerations:** If the jurisdiction disfavors such clauses, courts are more likely to view them as penalties, especially if they exceed actual damages.\n",
            "\n",
            "In conclusion, the trial court's ruling that Section 12 is a penalty and awarding $468 as actual damages is appropriate. Therefore, American Consulting is unlikely to succeed on appeal, as the clause was correctly determined to be a penalty, not liquidated damages.<｜end▁of▁sentence｜>\n"
          ]
        }
      ],
      "source": [
        "prompt_style = \"\"\"Below is an instruction that describes a task, paired with an input that provides further context.\n",
        "Write a response that appropriately completes the request.\n",
        "Before answering, think carefully about the question and create a step-by-step chain of thought to ensure a logical and accurate response.\n",
        "\n",
        "### Instruction:\n",
        "You are a legal expert with advanced knowledge in legal reasoning, case analysis, and interpretation of laws.\n",
        "Please answer the following legal question.\n",
        "### Question:\n",
        "{}\n",
        "### Response:\n",
        "<think>{}\"\"\"\n",
        "\n",
        "question = \"American Consulting Environmental Safety Services, Incorporated (American Consulting) (plaintiff) employed Schuck (defendant) as a safety instructor. Schuck signed an employment agreement with American Consulting. Schuck underwent additional training in occupational safety and health paid for by American Consulting. Section 12 of the employment agreement required that an employee who voluntarily terminated the employment or who was terminated for good cause within 12 months of training must repay a portion of the training cost based on how much time had passed since training. If the employment was terminated in fewer than three months, the employee was to repay the entire $3,000 cost of the training. The training comprised 1 day of watching videos and taking quizzes and 12 and a half days of shadow training with a coworker. American Consulting provided no other training. Schuck was paid at a rate of $9 per hour during the training. About five months after she began working at American Consulting, Schuck resigned due to medical problems and a concern for her pregnancy. American Consulting sued Schuck for repayment of half of the cost of her training. The trial court found that section 12 was a penalty provision and that the maximum damages were $468 (13 days at 8 hours per day at $9 per hour, divided by 2 because American Consulting was seeking to recover one half of the amount stipulated in Section 12). American Consulting appealed. Question: Can the plaintiff win?\"\n",
        "FastLanguageModel.for_inference(model)\n",
        "inputs = tokenizer([prompt_style.format(question, \"\")], return_tensors=\"pt\").to(\"cuda\")\n",
        "outputs = model.generate(\n",
        "    input_ids=inputs.input_ids,\n",
        "    attention_mask=inputs.attention_mask,\n",
        "    max_new_tokens=64000,\n",
        "    use_cache=False,\n",
        ")\n",
        "response = tokenizer.batch_decode(outputs)\n",
        "print(response[0].split(\"### Response:\")[1])"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：未经过微调的14B模型已经回答得非常好，符合美国法学院的IRAC框架（Issue-Rule-Application-Conclusion)。"
      ],
      "metadata": {
        "id": "V5175RsbzFGH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.使用法律CoT数据进行微调（本次微调将使用Huggingface开源项目harshasurampudi/legal-reasoning-lfqa-synthetic数据集。）"
      ],
      "metadata": {
        "id": "Z6Z6lqHDx7aK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.1数据预览"
      ],
      "metadata": {
        "id": "-DfwdJiHy0nH"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "0qqCxITwdDq-"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "splits = {'train': 'data/train-00000-of-00001-0baae4dd18cbd810.parquet', 'test': 'data/test-00000-of-00001-ac2cda93d9be754e.parquet', 'validation': 'data/validation-00000-of-00001-52fb3c019769bc09.parquet'}\n",
        "df = pd.read_parquet(\"hf://datasets/harshasurampudi/legal-reasoning-lfqa-synthetic/\" + splits[\"train\"])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "jjyuarMpld7e",
        "outputId": "ee1929f9-1456-4041-a68c-a74f08392868"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                 Context  \\\n",
              "0      Steel Co. v. Citizens for a Better Env't, 523 ...   \n",
              "1      in the record when there is no indication in t...   \n",
              "2      However, as in Kane, we need not address this ...   \n",
              "3      acquired through the knowing use of perjured t...   \n",
              "4      Sept. 22] with 26 Cal.App.3d at p. 627 [steel ...   \n",
              "...                                                  ...   \n",
              "14986  that a defendant who is erroneously prosecuted...   \n",
              "14987  court had not resolved, on the merits, whether...   \n",
              "14988  matter jurisdiction over the claims made by So...   \n",
              "14989  until the insurer approved the submitted evide...   \n",
              "14990  her two kids (id. at 426-27). Under these circ...   \n",
              "\n",
              "                                                Question  \\\n",
              "0      Is the Kazakhstan State Committee considered a...   \n",
              "1      Can a court find plain error in a case where t...   \n",
              "2      Can Monson be held liable for nondischargeabil...   \n",
              "3      Can the prosecution be held liable for using p...   \n",
              "4      If materials are delivered but not used in the...   \n",
              "...                                                  ...   \n",
              "14986  Can a defendant be re-tried under the correct ...   \n",
              "14987  Can LaConsay and Wetzel appeal the probate cou...   \n",
              "14988  If Southwest wants to bring a suit against Rec...   \n",
              "14989  What is the basis for rejecting a beneficiary'...   \n",
              "14990  Did the ICE officers' warrantless arrest of Pa...   \n",
              "\n",
              "                                         Legal Reasoning  \\\n",
              "0      The question at hand revolves around whether t...   \n",
              "1      The question pertains to the court's ability t...   \n",
              "2      The question revolves around the requirement f...   \n",
              "3      The question pertains to the use of perjured t...   \n",
              "4      The question pertains to whether a materialman...   \n",
              "...                                                  ...   \n",
              "14986  The question pertains to the potential retrial...   \n",
              "14987  The question pertains to the appealability of ...   \n",
              "14988  The question pertains to the requirement of pr...   \n",
              "14989  The rejection of a beneficiary's claim for lif...   \n",
              "14990  The question pertains to the violation of 8 U....   \n",
              "\n",
              "                                                  Answer  \n",
              "0      The categorization of the Kazakhstan State Com...  \n",
              "1      No, a court cannot find plain error in a case ...  \n",
              "2      Yes, Monson can be held liable for nondischarg...  \n",
              "3      Yes, the prosecution can be held liable for us...  \n",
              "4      No, if the materials delivered were not used i...  \n",
              "...                                                  ...  \n",
              "14986  A defendant can be re-tried under the correct ...  \n",
              "14987  Yes, LaConsay and Wetzel can appeal the probat...  \n",
              "14988  Yes, Southwest must provide a sixty-day writte...  \n",
              "14989  The basis for rejecting a beneficiary's claim ...  \n",
              "14990  Yes, the warrantless arrest of Pacheco by the ...  \n",
              "\n",
              "[14991 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d1ce5d36-a177-4f47-893c-8df1d422be74\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Context</th>\n",
              "      <th>Question</th>\n",
              "      <th>Legal Reasoning</th>\n",
              "      <th>Answer</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Steel Co. v. Citizens for a Better Env't, 523 ...</td>\n",
              "      <td>Is the Kazakhstan State Committee considered a...</td>\n",
              "      <td>The question at hand revolves around whether t...</td>\n",
              "      <td>The categorization of the Kazakhstan State Com...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>in the record when there is no indication in t...</td>\n",
              "      <td>Can a court find plain error in a case where t...</td>\n",
              "      <td>The question pertains to the court's ability t...</td>\n",
              "      <td>No, a court cannot find plain error in a case ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>However, as in Kane, we need not address this ...</td>\n",
              "      <td>Can Monson be held liable for nondischargeabil...</td>\n",
              "      <td>The question revolves around the requirement f...</td>\n",
              "      <td>Yes, Monson can be held liable for nondischarg...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>acquired through the knowing use of perjured t...</td>\n",
              "      <td>Can the prosecution be held liable for using p...</td>\n",
              "      <td>The question pertains to the use of perjured t...</td>\n",
              "      <td>Yes, the prosecution can be held liable for us...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Sept. 22] with 26 Cal.App.3d at p. 627 [steel ...</td>\n",
              "      <td>If materials are delivered but not used in the...</td>\n",
              "      <td>The question pertains to whether a materialman...</td>\n",
              "      <td>No, if the materials delivered were not used i...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14986</th>\n",
              "      <td>that a defendant who is erroneously prosecuted...</td>\n",
              "      <td>Can a defendant be re-tried under the correct ...</td>\n",
              "      <td>The question pertains to the potential retrial...</td>\n",
              "      <td>A defendant can be re-tried under the correct ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14987</th>\n",
              "      <td>court had not resolved, on the merits, whether...</td>\n",
              "      <td>Can LaConsay and Wetzel appeal the probate cou...</td>\n",
              "      <td>The question pertains to the appealability of ...</td>\n",
              "      <td>Yes, LaConsay and Wetzel can appeal the probat...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14988</th>\n",
              "      <td>matter jurisdiction over the claims made by So...</td>\n",
              "      <td>If Southwest wants to bring a suit against Rec...</td>\n",
              "      <td>The question pertains to the requirement of pr...</td>\n",
              "      <td>Yes, Southwest must provide a sixty-day writte...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14989</th>\n",
              "      <td>until the insurer approved the submitted evide...</td>\n",
              "      <td>What is the basis for rejecting a beneficiary'...</td>\n",
              "      <td>The rejection of a beneficiary's claim for lif...</td>\n",
              "      <td>The basis for rejecting a beneficiary's claim ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14990</th>\n",
              "      <td>her two kids (id. at 426-27). Under these circ...</td>\n",
              "      <td>Did the ICE officers' warrantless arrest of Pa...</td>\n",
              "      <td>The question pertains to the violation of 8 U....</td>\n",
              "      <td>Yes, the warrantless arrest of Pacheco by the ...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>14991 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1ce5d36-a177-4f47-893c-8df1d422be74')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d1ce5d36-a177-4f47-893c-8df1d422be74 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d1ce5d36-a177-4f47-893c-8df1d422be74');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2116b1df-fe73-48fa-843a-5cd763f290a8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2116b1df-fe73-48fa-843a-5cd763f290a8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2116b1df-fe73-48fa-843a-5cd763f290a8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 14991,\n  \"fields\": [\n    {\n      \"column\": \"Context\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14991,\n        \"samples\": [\n          \"trustee in bankruptcy, etc., as entities that may be aggrieved parties with standing to file an FCRA claim provides support for conferring standing on a \\u201cpersonal representative\\u201d (to the extent that \\u201cpersonal representative\\u201d is not subsumed into the term \\u201clegal representative\\u201d). Moreover, it cannot be said that Mrs. Cimino was not an \\u201cindividual\\u201d capable of being \\u201caggrieved\\u201d by discrimination purportedly directed at her husband prior to his death. It is not a leap in logic to find that a statute that permits an aggrieved \\u201ctrustee in bankruptcy\\u201d to file an FCRA charge would similarly permit a widow acting in her capacity as personal and legal representative of the deceased\\u2019s estate to do so. See Thompson v. N. Am. Stainless, LP, 562 U.S. 170, 178, 131 S.Ct. 863, 178 L.Ed.2d 694 (2011) (<HOLDING>). The FCRA \\u201cshall be construed according to the\",\n          \"that he had been discriminated against when he was not selected for and promoted to a specialist position. Id. at 46. The plaintiff first attempted to lay venue in the District of Columbia as the location where the unlawful employment practice was alleged to have been committed. To support this argument he argued that \\u201cdiscriminatory activities, retaliation, and reprisal\\u201d had occurred at the District of Columbia location where he worked. Id. at 46 n. 3. However, the court determined that the plaintiff could not rely on this first statutory basis for venue. Because the plaintiff was complaining about his failure to be promoted, the court determined that under the first statutory basis for venue, Virginia was where \\u201c[t]he selections for the positions that plaintiff sought were made.\\u201d Id. (<HOLDING>). Here, McLaughlin made the selection decisions\",\n          \"not require the debtor to perform any particular services but only to hold himself available to consult as called upon, and (3) compensated the debtor according to a fixed, front-loaded payment schedule which did not correlate to the actual services provided by the debtor, who received the first several monthly payments without rendering any services. Id. at 605-07. Nor does the inclusion of a non-compete provision in the Consulting Agreement alter the Court\\u2019s analysis. To the contrary, as other federal courts have recognized, post-petition payments under a pre-petition non-compete agreement are property of the debtor\\u2019s bankruptcy estate where, as here, the non-compete agreement was intertwined with the pre-petition sale of the debtor\\u2019s business. See, e.g., Andrews, 80 F.3d at 910-11 (<HOLDING>); Johnson, 178 B.R. at 218-19 (holding payments\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Question\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14991,\n        \"samples\": [\n          \"Can Mrs. Cimino, acting as the personal and legal representative of her deceased husband's estate, file an FCRA claim for discrimination against her husband prior to his death?\",\n          \"Can the plaintiff argue for venue in the District of Columbia based on the discriminatory activities and reprisal that occurred at that location?\",\n          \"Can the payments made under a pre-petition non-compete agreement be considered as part of the debtor's bankruptcy estate?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legal Reasoning\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14991,\n        \"samples\": [\n          \"The question revolves around whether Mrs. Cimino has standing to file an FCRA claim as the personal and legal representative of her deceased husband's estate. The statute provides support for granting standing to \\\"personal representatives\\\" as aggrieved parties. It can be argued that Mrs. Cimino, as an individual who experienced discrimination allegedly directed at her husband before his death, is also capable of being \\\"aggrieved\\\" by such discrimination. In Thompson v. N. Am. Stainless, LP, the Supreme Court held that statutes allowing an \\\"aggrieved trustee in bankruptcy\\\" to file an FCRA charge would similarly permit a widow, acting as the personal and legal representative of the deceased's estate, to do so. Therefore, it is reasonable to conclude that Mrs. Cimino can file an FCRA claim on behalf of her deceased husband's estate.\",\n          \"The question revolves around the issue of venue in an employment discrimination case. The court in this case determined that the plaintiff could not establish venue in the District of Columbia based on the first statutory basis, which requires the discriminatory activities to have been committed at the intended venue. In this case, the plaintiff's claim is related to his failure to be promoted, and the court found that the selections for the positions he sought were made in Virginia. Therefore, the court held that Virginia was the appropriate venue for the case. As a result, the plaintiff cannot argue for venue in the District of Columbia based on the discriminatory activities and reprisal that occurred there.\",\n          \"The question pertains to the inclusion of post-petition payments under a pre-petition non-compete agreement in the debtor's bankruptcy estate. In cases where the non-compete agreement is closely connected to the sale of the debtor's business prior to the bankruptcy, federal courts have recognized that such payments fall within the debtor's bankruptcy estate. The court's analysis focuses on the nature of the payment and its connection to the services provided by the debtor. In this case, the Consulting Agreement between the debtor and the party making the payment did not require the debtor to perform any specific services but only to make himself available for consultation as needed. Furthermore, the compensation was fixed according to a predetermined schedule, regardless of the actual services rendered. These factors indicate that the payments made under the agreement should be considered part of the debtor's bankruptcy estate. Additionally, the presence of a non-compete provision in the Consulting Agreement does not alter this analysis, as other federal courts have recognized the inclusion of post-petition payments under pre-petition non-compete agreements in the bankruptcy estate when intertwined with the pre-petition sale of the debtor's business.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Answer\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14991,\n        \"samples\": [\n          \"Yes, Mrs. Cimino, acting as the personal and legal representative of her deceased husband's estate, can file an FCRA claim for discrimination against her husband prior to his death, based on standing granted to \\\"personal representatives\\\" and the precedent set by Thompson v. N. Am. Stainless, LP.\",\n          \"No, the plaintiff cannot argue for venue in the District of Columbia based on the discriminatory activities and reprisal that occurred at that location. The court determined that Virginia was the appropriate venue for the case as the selections for the positions the plaintiff sought were made in Virginia.\",\n          \"Yes, the payments made under a pre-petition non-compete agreement can be considered as part of the debtor's bankruptcy estate, especially when the agreement is closely connected to the sale of the debtor's business prior to the bankruptcy.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：稍后我需要把Context和Question的内容拼接在一起，便于后面作为整体的Question插入至我的训练数据template里。"
      ],
      "metadata": {
        "id": "Wr47vyyx0IJ7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.2 准备训练数据模板"
      ],
      "metadata": {
        "id": "0_woB19p0sj5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_prompt_style = \"\"\"Below is an instruction that describes a task, paired with an input that provides further context.\n",
        "Write a response that appropriately completes the request.\n",
        "Before answering, think carefully about the question and create a step-by-step chain of thought to ensure a logical and accurate response.\n",
        "\n",
        "### Instruction:\n",
        "You are a legal expert with advanced knowledge in legal reasoning, case analysis, and interpretation of laws.\n",
        "Please answer the following legal question.\n",
        "### Question:\n",
        "{}\n",
        "### Response:\n",
        "<think>\n",
        "{}\n",
        "</think>\n",
        "{}\"\"\"\n",
        "EOS_TOKEN = tokenizer.eos_token"
      ],
      "metadata": {
        "id": "5uC0PAep0moX"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.3定义格式化函数"
      ],
      "metadata": {
        "id": "6yv2qmK101YL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def formatting_prompts_func(examples):\n",
        "    inputs = examples[\"Context\"]+examples[\"Question\"] #把Context和Question进行拼接\n",
        "    cots = examples[\"Legal Reasoning\"]\n",
        "    outputs = examples[\"Answer\"]\n",
        "    texts = []\n",
        "    for input_text, cot, output_text in zip(inputs, cots, outputs):\n",
        "        text = train_prompt_style.format(input_text, cot, output_text) + EOS_TOKEN\n",
        "        texts.append(text)\n",
        "    return {\"text\": texts}"
      ],
      "metadata": {
        "id": "wDAqyvEA0yCv"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.4加载数据集"
      ],
      "metadata": {
        "id": "ZB9rCjoZ0_uT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from datasets import load_dataset\n",
        "dataset = load_dataset(\"harshasurampudi/legal-reasoning-lfqa-synthetic\", split=\"train[0:500]\", trust_remote_code=True)\n",
        "dataset = dataset.map(formatting_prompts_func, batched=True)\n",
        "print(dataset[\"text\"][0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "96LI96IW07rk",
        "outputId": "70333e1b-7756-4948-c0ef-204d19ea54e4"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Below is an instruction that describes a task, paired with an input that provides further context. \n",
            "Write a response that appropriately completes the request. \n",
            "Before answering, think carefully about the question and create a step-by-step chain of thought to ensure a logical and accurate response.\n",
            "\n",
            "### Instruction:\n",
            "You are a legal expert with advanced knowledge in legal reasoning, case analysis, and interpretation of laws. \n",
            "Please answer the following legal question.\n",
            "### Question:\n",
            "Steel Co. v. Citizens for a Better Env't, 523 U.S. 83, 95, 118 S.Ct. 1003, 1012-13, 140 L.Ed.2d 210 (1998). 8 . World Wide does not dispute that the Kazakhstan State Committee is an “agency or instrumentality of a foreign state” within the meaning s not define an implied waiver.” Creighton Ltd. v. Government of the State of Qatar, 181 F.3d 118, 122 (D.C.Cir.1999). This circuit, however, has \"followed ctant to stray beyond these examples when considering claims that a nation has implicitly waived its defense of sovereign immunity.\" Princz v. Federal Republic of Germany, 26 F.3d 1166, 1174 (D.C.Cir.1994) (quoting Frolova, 761 F.2d at 377). 12 . Cf. C & L Enters., Inc. v. Citizen Band Potawatomi Indian Tribe, 532 U.S. 411, 418, 421 n. 3, 423, 121 S.Ct. 1589, 1594, 149 L.Ed.2d 623 (2001) (<HOLDING>). 13 . The Management Agreement states: \"In\n",
            "### Response:\n",
            "<think>\n",
            "The question at hand revolves around whether the Kazakhstan State Committee qualifies as an \"agency or instrumentality of a foreign state\" as per the definition provided in Steel Co. v. Citizens for a Better Env't. In this case, the Supreme Court defined such entities as those that are an integral part of a foreign government, performing governmental functions on its behalf. While World Wide does not contest the classification of the Kazakhstan State Committee as an \"agency or instrumentality of a foreign state,\" it is essential to establish its official status. The Creighton Ltd. v. Government of the State of Qatar case further clarifies that an implied waiver of sovereign immunity does not occur simply based on the relationship between an entity and a foreign state. Therefore, to determine if the Kazakhstan State Committee falls under this category, it is crucial to ascertain its role and function within the government. Previous precedent in the Princz v. Federal Republic of Germany case suggests that it is inappropriate to stray beyond the explicit examples provided when considering claims of implied waiver of sovereign immunity. Thus, a thorough analysis of the Kazakhstan State Committee's nature, function, and relationship with the government is necessary to determine its classification.\n",
            "</think>\n",
            "The categorization of the Kazakhstan State Committee as an \"agency or instrumentality of a foreign state\" within the definition provided in Steel Co. v. Citizens for a Better Env't, 523 U.S. 83 has not been explicitly addressed in the given legal context. Further investigation and analysis of the committee's role, function, and relationship with the government are required to determine its classification accurately.<｜end▁of▁sentence｜>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：一个包含法律CoT数据的训练样本如上所示。"
      ],
      "metadata": {
        "id": "Dbuy2ogI2UEQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.5 设置Lora进行微调"
      ],
      "metadata": {
        "id": "fx_x1-L52eyJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = FastLanguageModel.get_peft_model(\n",
        "    model,\n",
        "    r=16,\n",
        "    target_modules=[\n",
        "        \"q_proj\",\n",
        "        \"k_proj\",\n",
        "        \"v_proj\",\n",
        "        \"o_proj\",\n",
        "        \"gate_proj\",\n",
        "        \"up_proj\",\n",
        "        \"down_proj\",\n",
        "    ],\n",
        "    lora_alpha=16,\n",
        "    lora_dropout=0,\n",
        "    bias=\"none\",\n",
        "    use_gradient_checkpointing=\"unsloth\",  # True or \"unsloth\" for very long context\n",
        "    random_state=3407,\n",
        "    use_rslora=False,\n",
        "    loftq_config=None,\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YEjjlpKF1Iib",
        "outputId": "bbab3c66-8168-4ff8-93b1-e002fcb50166"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Unsloth 2025.2.12 patched 48 layers with 48 QKV layers, 48 O layers and 48 MLP layers.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.6配置训练参数"
      ],
      "metadata": {
        "id": "o8x_REGK2ogD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from trl import SFTTrainer\n",
        "from transformers import TrainingArguments\n",
        "from unsloth import is_bfloat16_supported\n",
        "\n",
        "trainer = SFTTrainer(\n",
        "    model=model,\n",
        "    tokenizer=tokenizer,\n",
        "    train_dataset=dataset,\n",
        "    dataset_text_field=\"text\",\n",
        "    max_seq_length=max_seq_length,\n",
        "    dataset_num_proc=2,\n",
        "    args=TrainingArguments(\n",
        "        per_device_train_batch_size=2,\n",
        "        gradient_accumulation_steps=4,\n",
        "        # Use num_train_epochs = 1, warmup_ratio for full training runs!\n",
        "        warmup_steps=5,\n",
        "        max_steps=60,\n",
        "        learning_rate=2e-4,\n",
        "        fp16=not is_bfloat16_supported(),\n",
        "        bf16=is_bfloat16_supported(),\n",
        "        logging_steps=10,\n",
        "        optim=\"adamw_8bit\",\n",
        "        weight_decay=0.01,\n",
        "        lr_scheduler_type=\"linear\",\n",
        "        seed=3407,\n",
        "        output_dir=\"outputs\",\n",
        "    ),\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "2cb383949748488199072b23c6d24e6a",
            "cb8f7eab52f14ac6a4aa95d669788294",
            "bbcd54a1823b460c8c7e18282ec7a1aa",
            "0870940008e5427c8e8f7ae14e166e24",
            "89ee5282614f43108af67fb34822705a",
            "6e5741ca482c4da8bf45cb0664548e74",
            "64118379272f4c229efbbe542b1f393f",
            "2a36b959c3564af3a3dac46b71b3a9cb",
            "08e5cae317c84ee3b5054447fc53579e",
            "db9255dcf6ae4c93a32a713560db6ae6",
            "ff33071ad09847e9a9a481ecdcd32227",
            "01182f920c3647b6bd0e9a6a0d7c41b2",
            "5cf13c7f7fa143b1b283be48215f5bf0",
            "d1f823071f684b019f3a8b08e7d5c849",
            "e2ee5ec07660440fab24fd898ea45b4a",
            "21ad369d0dba4badb5dae13c3b1a03de",
            "043551e916774795ad721000651fafd2",
            "3a279f1070db4a76ad9fc5347035ea35",
            "302d135a070c437c85a621c541b592ad",
            "672884c5be394289b90c956defab3540",
            "9966f5e14af049ca8208b74e8f054670",
            "e82265c4046c45dab2797fc12ebd3362"
          ]
        },
        "id": "mDoOLikD2ic8",
        "outputId": "aec5e47d-bca7-49ec-afea-a65d9b7e50c5"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Tokenizing train dataset (num_proc=2):   0%|          | 0/500 [00:00<?, ? examples/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2cb383949748488199072b23c6d24e6a"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Tokenizing train dataset (num_proc=2):   0%|          | 0/500 [00:00<?, ? examples/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "01182f920c3647b6bd0e9a6a0d7c41b2"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip uninstall peft transformers trl accelerate bitsandbytes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KenoSI-X3kjr",
        "outputId": "bc061b4e-54bc-47d2-e9a3-de8cf63205f3"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found existing installation: peft 0.14.0\n",
            "Uninstalling peft-0.14.0:\n",
            "  Would remove:\n",
            "    /usr/local/lib/python3.11/dist-packages/peft-0.14.0.dist-info/*\n",
            "    /usr/local/lib/python3.11/dist-packages/peft/*\n",
            "Proceed (Y/n)? y\n",
            "  Successfully uninstalled peft-0.14.0\n",
            "Found existing installation: transformers 4.48.3\n",
            "Uninstalling transformers-4.48.3:\n",
            "  Would remove:\n",
            "    /usr/local/bin/transformers-cli\n",
            "    /usr/local/lib/python3.11/dist-packages/transformers-4.48.3.dist-info/*\n",
            "    /usr/local/lib/python3.11/dist-packages/transformers/*\n",
            "Proceed (Y/n)? y\n",
            "  Successfully uninstalled transformers-4.48.3\n",
            "Found existing installation: trl 0.15.0\n",
            "Uninstalling trl-0.15.0:\n",
            "  Would remove:\n",
            "    /usr/local/bin/trl\n",
            "    /usr/local/lib/python3.11/dist-packages/trl-0.15.0.dist-info/*\n",
            "    /usr/local/lib/python3.11/dist-packages/trl/*\n",
            "Proceed (Y/n)? y\n",
            "  Successfully uninstalled trl-0.15.0\n",
            "Found existing installation: accelerate 1.3.0\n",
            "Uninstalling accelerate-1.3.0:\n",
            "  Would remove:\n",
            "    /usr/local/bin/accelerate\n",
            "    /usr/local/bin/accelerate-config\n",
            "    /usr/local/bin/accelerate-estimate-memory\n",
            "    /usr/local/bin/accelerate-launch\n",
            "    /usr/local/bin/accelerate-merge-weights\n",
            "    /usr/local/lib/python3.11/dist-packages/accelerate-1.3.0.dist-info/*\n",
            "    /usr/local/lib/python3.11/dist-packages/accelerate/*\n",
            "Proceed (Y/n)? y\n",
            "  Successfully uninstalled accelerate-1.3.0\n",
            "Found existing installation: bitsandbytes 0.45.2\n",
            "Uninstalling bitsandbytes-0.45.2:\n",
            "  Would remove:\n",
            "    /usr/local/lib/python3.11/dist-packages/bitsandbytes-0.45.2.dist-info/*\n",
            "    /usr/local/lib/python3.11/dist-packages/bitsandbytes/*\n",
            "Proceed (Y/n)? y\n",
            "  Successfully uninstalled bitsandbytes-0.45.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install peft transformers trl accelerate bitsandbytes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "euTZNkrC3uRE",
        "outputId": "6f364cfe-4638-40db-aa4b-df9bfe2ef82b"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting peft\n",
            "  Using cached peft-0.14.0-py3-none-any.whl.metadata (13 kB)\n",
            "Collecting transformers\n",
            "  Using cached transformers-4.48.3-py3-none-any.whl.metadata (44 kB)\n",
            "Collecting trl\n",
            "  Using cached trl-0.15.0-py3-none-any.whl.metadata (11 kB)\n",
            "Collecting accelerate\n",
            "  Using cached accelerate-1.3.0-py3-none-any.whl.metadata (19 kB)\n",
            "Collecting bitsandbytes\n",
            "  Using cached bitsandbytes-0.45.2-py3-none-manylinux_2_24_x86_64.whl.metadata (5.8 kB)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.11/dist-packages (from peft) (1.26.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from peft) (24.2)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from peft) (5.9.5)\n",
            "Requirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from peft) (6.0.2)\n",
            "Requirement already satisfied: torch>=1.13.0 in /usr/local/lib/python3.11/dist-packages (from peft) (2.6.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from peft) (4.67.1)\n",
            "Requirement already satisfied: safetensors in /usr/local/lib/python3.11/dist-packages (from peft) (0.5.2)\n",
            "Requirement already satisfied: huggingface-hub>=0.25.0 in /usr/local/lib/python3.11/dist-packages (from peft) (0.28.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from transformers) (3.17.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2024.11.6)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from transformers) (2.32.3)\n",
            "Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.21.0)\n",
            "Requirement already satisfied: datasets>=2.21.0 in /usr/local/lib/python3.11/dist-packages (from trl) (3.3.0)\n",
            "Requirement already satisfied: rich in /usr/local/lib/python3.11/dist-packages (from trl) (13.9.4)\n",
            "Requirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (17.0.0)\n",
            "Requirement already satisfied: dill<0.3.9,>=0.3.0 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (0.3.8)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (2.2.2)\n",
            "Requirement already satisfied: xxhash in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (3.5.0)\n",
            "Requirement already satisfied: multiprocess<0.70.17 in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (0.70.16)\n",
            "Requirement already satisfied: fsspec<=2024.12.0,>=2023.1.0 in /usr/local/lib/python3.11/dist-packages (from fsspec[http]<=2024.12.0,>=2023.1.0->datasets>=2.21.0->trl) (2024.10.0)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from datasets>=2.21.0->trl) (3.11.12)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.25.0->peft) (4.12.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2025.1.31)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (3.4.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (3.1.5)\n",
            "Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.127)\n",
            "Requirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (9.1.0.70)\n",
            "Requirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.5.8)\n",
            "Requirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (11.2.1.3)\n",
            "Requirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (10.3.5.147)\n",
            "Requirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (11.6.1.9)\n",
            "Requirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.3.1.170)\n",
            "Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (0.6.2)\n",
            "Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (2.21.5)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.127)\n",
            "Requirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (12.4.127)\n",
            "Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (3.2.0)\n",
            "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.13.0->peft) (1.13.1)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.13.0->peft) (1.3.0)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich->trl) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich->trl) (2.18.0)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (2.4.6)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (1.3.2)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (25.1.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (1.5.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (6.1.0)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (0.2.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->datasets>=2.21.0->trl) (1.18.3)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich->trl) (0.1.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.13.0->peft) (3.0.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.21.0->trl) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.21.0->trl) (2025.1)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas->datasets>=2.21.0->trl) (2025.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas->datasets>=2.21.0->trl) (1.17.0)\n",
            "Using cached peft-0.14.0-py3-none-any.whl (374 kB)\n",
            "Using cached transformers-4.48.3-py3-none-any.whl (9.7 MB)\n",
            "Using cached trl-0.15.0-py3-none-any.whl (318 kB)\n",
            "Using cached accelerate-1.3.0-py3-none-any.whl (336 kB)\n",
            "Using cached bitsandbytes-0.45.2-py3-none-manylinux_2_24_x86_64.whl (69.7 MB)\n",
            "Installing collected packages: transformers, bitsandbytes, accelerate, trl, peft\n",
            "Successfully installed accelerate-1.3.0 bitsandbytes-0.45.2 peft-0.14.0 transformers-4.48.3 trl-0.15.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "accelerate",
                  "bitsandbytes",
                  "peft",
                  "transformers",
                  "trl"
                ]
              },
              "id": "7dcd887c042041028c30d07052a13cec"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：在上述设置训练参数时我们遇到了AttributeError: 'PeftModelForCausalLM' object has no attribute '_unwrapped_old_generate'的问题，这个问题在开发者社区也出现过，解决问题的方法如下：\n",
        "```\n",
        "!pip uninstall peft transformers trl accelerate bitsandbytes -y\n",
        "!pip install peft transformers trl accelerate bitsandbytes\n",
        "```\n",
        "https://github.com/BinNong/deepseek-r1-llama-8b/issues/1"
      ],
      "metadata": {
        "id": "UaVgOEGa4SaL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.7开始微调"
      ],
      "metadata": {
        "id": "mMYY5Hw69CiS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "trainer_stats = trainer.train()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "sfMlqUlb4A7R",
        "outputId": "4c3a292e-8cab-404f-a1ca-350d780259b7"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "==((====))==  Unsloth - 2x faster free finetuning | Num GPUs = 1\n",
            "   \\\\   /|    Num examples = 500 | Num Epochs = 1\n",
            "O^O/ \\_/ \\    Batch size per device = 2 | Gradient Accumulation steps = 4\n",
            "\\        /    Total batch size = 8 | Total steps = 60\n",
            " \"-____-\"     Number of trainable parameters = 68,812,800\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mtracy-wuyue-wang\u001b[0m (\u001b[33mkwm\u001b[0m) to \u001b[32mhttps://api.wandb.ai\u001b[0m. Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Tracking run with wandb version 0.19.6"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Run data is saved locally in <code>/content/wandb/run-20250216_180856-nkgos6ja</code>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Syncing run <strong><a href='https://wandb.ai/kwm/huggingface/runs/nkgos6ja' target=\"_blank\">outputs</a></strong> to <a href='https://wandb.ai/kwm/huggingface' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/developer-guide' target=\"_blank\">docs</a>)<br>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              " View project at <a href='https://wandb.ai/kwm/huggingface' target=\"_blank\">https://wandb.ai/kwm/huggingface</a>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              " View run at <a href='https://wandb.ai/kwm/huggingface/runs/nkgos6ja' target=\"_blank\">https://wandb.ai/kwm/huggingface/runs/nkgos6ja</a>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='60' max='60' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [60/60 03:36, Epoch 0/1]\n",
              "    </div>\n",
              "    <table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              " <tr style=\"text-align: left;\">\n",
              "      <th>Step</th>\n",
              "      <th>Training Loss</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>10</td>\n",
              "      <td>1.771500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>20</td>\n",
              "      <td>1.228300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>30</td>\n",
              "      <td>1.109700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>40</td>\n",
              "      <td>1.073600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>50</td>\n",
              "      <td>1.045600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>60</td>\n",
              "      <td>1.066900</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table><p>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "备注：本项目仅供Demo使用，只训练了1个Epoch。"
      ],
      "metadata": {
        "id": "9wek2rj28w4O"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.8 用相同问题测试微调后的模型"
      ],
      "metadata": {
        "id": "DWRAKKEe9VjQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prompt_style = \"\"\"Below is an instruction that describes a task, paired with an input that provides further context.\n",
        "Write a response that appropriately completes the request.\n",
        "Before answering, think carefully about the question and create a step-by-step chain of thought to ensure a logical and accurate response.\n",
        "\n",
        "### Instruction:\n",
        "You are a legal expert with advanced knowledge in legal reasoning, case analysis, and interpretation of laws.\n",
        "Please answer the following legal question.\n",
        "### Question:\n",
        "{}\n",
        "### Response:\n",
        "<think>{}\"\"\""
      ],
      "metadata": {
        "id": "KX_fo-QM9u9j"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "question = \"American Consulting Environmental Safety Services, Incorporated (American Consulting) (plaintiff) employed Schuck (defendant) as a safety instructor. Schuck signed an employment agreement with American Consulting. Schuck underwent additional training in occupational safety and health paid for by American Consulting. Section 12 of the employment agreement required that an employee who voluntarily terminated the employment or who was terminated for good cause within 12 months of training must repay a portion of the training cost based on how much time had passed since training. If the employment was terminated in fewer than three months, the employee was to repay the entire $3,000 cost of the training. The training comprised 1 day of watching videos and taking quizzes and 12 and a half days of shadow training with a coworker. American Consulting provided no other training. Schuck was paid at a rate of $9 per hour during the training. About five months after she began working at American Consulting, Schuck resigned due to medical problems and a concern for her pregnancy. American Consulting sued Schuck for repayment of half of the cost of her training. The trial court found that section 12 was a penalty provision and that the maximum damages were $468 (13 days at 8 hours per day at $9 per hour, divided by 2 because American Consulting was seeking to recover one half of the amount stipulated in Section 12). American Consulting appealed. Question: Can the plaintiff win?\"\n",
        "\n",
        "FastLanguageModel.for_inference(model)\n",
        "inputs = tokenizer([prompt_style.format(question, \"\")], return_tensors=\"pt\").to(\"cuda\")\n",
        "outputs = model.generate(\n",
        "    input_ids=inputs.input_ids,\n",
        "    attention_mask=inputs.attention_mask,\n",
        "    max_new_tokens=64000,\n",
        "    use_cache=True,\n",
        ")\n",
        "response = tokenizer.batch_decode(outputs)\n",
        "print(response[0].split(\"### Response:\")[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eIgisrPw6ILF",
        "outputId": "6f258a80-326a-43b2-986a-3f21c5a3551c"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "<think>\n",
            "The question revolves around whether the plaintiff, American Consulting Environmental Safety Services, Incorporated, can win the case against the defendant, Schuck, regarding the repayment of the training cost. Section 12 of the employment agreement states that if the employment is terminated within 12 months of training, the employee must repay a portion of the training cost based on the time elapsed since the training. If the termination occurs within three months, the employee is required to repay the entire $3,000 cost of the training. \n",
            "\n",
            "In this case, Schuck resigned from her job due to medical problems and concerns about her pregnancy, which was about five months after she started working at American Consulting. American Consulting sued Schuck for the repayment of half of the training cost, which amounts to $1,500. However, the trial court found that Section 12 of the employment agreement was a penalty provision and that the maximum damages the plaintiff could recover were $468, which is calculated based on 13 days of training at 8 hours per day, at a rate of $9 per hour, divided by two. \n",
            "\n",
            "The trial court's decision suggests that the plaintiff cannot recover the entire $1,500 for the training cost, as it was deemed a penalty provision. Therefore, it is unlikely that the plaintiff can win the case against Schuck, as the trial court's ruling limits their recovery to $468.\n",
            "</think>\n",
            "No, the plaintiff cannot win the case against Schuck, as the trial court ruled that Section 12 of the employment agreement was a penalty provision and limited the maximum damages to $468.<｜end▁of▁sentence｜>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.9在WanDB上保存模型"
      ],
      "metadata": {
        "id": "WctNU4tt9mra"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Save the fine-tuned model\n",
        "wandb.finish()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 596
        },
        "id": "QssaH5ZB9ki6",
        "outputId": "1800b2de-f897-432e-c762-2e8d84b8499d"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br>    <style><br>        .wandb-row {<br>            display: flex;<br>            flex-direction: row;<br>            flex-wrap: wrap;<br>            justify-content: flex-start;<br>            width: 100%;<br>        }<br>        .wandb-col {<br>            display: flex;<br>            flex-direction: column;<br>            flex-basis: 100%;<br>            flex: 1;<br>            padding: 10px;<br>        }<br>    </style><br><div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>train/epoch</td><td>▁▂▄▅▇██</td></tr><tr><td>train/global_step</td><td>▁▂▄▅▇██</td></tr><tr><td>train/grad_norm</td><td>█▁▂▃▁▂</td></tr><tr><td>train/learning_rate</td><td>█▇▅▄▂▁</td></tr><tr><td>train/loss</td><td>█▃▂▁▁▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>total_flos</td><td>2.4353021506154496e+16</td></tr><tr><td>train/epoch</td><td>0.96</td></tr><tr><td>train/global_step</td><td>60</td></tr><tr><td>train/grad_norm</td><td>0.16776</td></tr><tr><td>train/learning_rate</td><td>0</td></tr><tr><td>train/loss</td><td>1.0669</td></tr><tr><td>train_loss</td><td>1.21595</td></tr><tr><td>train_runtime</td><td>239.5101</td></tr><tr><td>train_samples_per_second</td><td>2.004</td></tr><tr><td>train_steps_per_second</td><td>0.251</td></tr></table><br/></div></div>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              " View run <strong style=\"color:#cdcd00\">outputs</strong> at: <a href='https://wandb.ai/kwm/huggingface/runs/nkgos6ja' target=\"_blank\">https://wandb.ai/kwm/huggingface/runs/nkgos6ja</a><br> View project at: <a href='https://wandb.ai/kwm/huggingface' target=\"_blank\">https://wandb.ai/kwm/huggingface</a><br>Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find logs at: <code>./wandb/run-20250216_180856-nkgos6ja/logs</code>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3.保存模型"
      ],
      "metadata": {
        "id": "qdQj5Ht2-OU0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "3.1保存到本地"
      ],
      "metadata": {
        "id": "Qs0h-bmJ-WDK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# new_model_online = \"DeepSeek-R1-14B-US-Law-Co\"\n",
        "new_model_local = \"DeepSeek-R1-14B-US-Law-CoT\"\n",
        "model.save_pretrained(new_model_local) # Local saving\n",
        "tokenizer.save_pretrained(new_model_local)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u5C3Loy19wyL",
        "outputId": "71c3e4ad-7f88-499e-ad61-beb1b237623a"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('DeepSeek-R1-14B-US-Law-CoT/tokenizer_config.json',\n",
              " 'DeepSeek-R1-14B-US-Law-CoT/special_tokens_map.json',\n",
              " 'DeepSeek-R1-14B-US-Law-CoT/tokenizer.json')"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3.2保存到Huggingface"
      ],
      "metadata": {
        "id": "PQ3rthsQ-ZTH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "new_model_online = \"TracyWang/DeepSeek-R1-14B-US-Law-CoT-Demo\"\n",
        "model.push_to_hub(new_model_online) # Online saving\n",
        "tokenizer.push_to_hub(new_model_online) # Online saving"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130,
          "referenced_widgets": [
            "7103c9d51872484e8097b122bb340304",
            "eeb7cb3035994ea1becbfaa5e993674f",
            "07f3989e5eb04ea79af9b4951c34d9aa",
            "539f23b3367a42318a8e9177c9614ced",
            "f2f1fcc14dcc44d48ba389a2521f6689",
            "d0e48f3e85e9484a8537fb01608ab129",
            "75959d2ccdfe4875bbca30a5e9279776",
            "1866b649a7f2422fbfb5fb44637bb2ef",
            "b26101e4a4be4bfea5aa8ce960f42f0d",
            "58c75a1782ba4490ae006dcb007d9274",
            "ea852edb54114ea39ebd344e1caadf1e",
            "23a74fab8b814e35ac70c75162db3dda",
            "2902fd1810fe4867aecd338378c39436",
            "0a3859d7f7bb4f1cab585351f0996617",
            "c1bbd2b82c1e4c71b26928380b319ada",
            "2c02afe94e2a49fea1fdef04b93d9efe",
            "7ba4a6bc2e224aa3b1e9878873bdfdf0",
            "d085d775649f45ebb2a70f743275c2cf",
            "961f4da3c4154b74b95ac537c6b173f6",
            "3ce523aef0794d82bb3ae5c9941f9ed8",
            "63218a9fa63940388fead44a579bc364",
            "19e6e786721d47ab9cd839819eafb7ae",
            "1f82daacdf7240059201267907e5d94c",
            "b26dcfd1bc464db196293a6bf0f6d593",
            "15c5877496934f518f52b4009a8e9683",
            "269ff419dcdc431ebe379720b010630b",
            "a9652dbd275d4154aa77dfe4927fcc01",
            "cd1bfa6f74f74041bbe331dddd37dc94",
            "7a8e06ec93124b36a8b084b39f366fa6",
            "45e10b2815c041388e2d6f51f9b3cb01",
            "d7538ec510c24f3cb21c55bfe01ef5cd",
            "693bb4bb0283494eaaece9096f6b47f5",
            "da0c1a06db154ce9a0fe137b7f9c9d42"
          ]
        },
        "id": "D6fMGsfw-CT6",
        "outputId": "e3b23494-5de2-4d19-ba3a-c7588116045e"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "README.md:   0%|          | 0.00/628 [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7103c9d51872484e8097b122bb340304"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "adapter_model.safetensors:   0%|          | 0.00/275M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "23a74fab8b814e35ac70c75162db3dda"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved model to https://huggingface.co/TracyWang/DeepSeek-R1-14B-US-Law-CoT-Demo\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "tokenizer.json:   0%|          | 0.00/11.4M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1f82daacdf7240059201267907e5d94c"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 结论\n",
        "\n",
        "本Demo演示了如何用法律领域思维链数据加强DeepSeek-14B模型的说理能力，本Demo的意义如下：\n",
        "\n",
        "\n",
        "\n",
        "*   法律的核心在于说理，也就是Legal Reasoning。法律CoT思维链数据，以美国法IRAC为代表的Argument框架天然配适以强化学习为皇冠明珠的DeepSeek系列模型，可以提升模型的Legal Reasoning能力。\n",
        "*   在模型参数优先的情况下，构建高质量CoT数据集，可以让模型获得Legal Reasoning的能力，实现小模型也能完成法律分析、案例推理的效果。\n",
        "\n",
        "*   与RAG（开卷考试）不同，微调旨在提升模型自身的能力，是改变了模型的权重，如果特定部门法领域具备高质量的Reasoning数据，可以按照本Demo完成专属模型的微调，（划重点）这个才是真正的训练（而不是RAG检索增强）。\n"
      ],
      "metadata": {
        "id": "uYa_rSiG-oHZ"
      }
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "A100",
      "machine_shape": "hm",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "ed6a759916f04b43bcf6c4a46f24ebcd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_9bac0a383e2346a5981f5fd1d5ebdc71",
              "IPY_MODEL_78b9a327688346079cc5438fc9ef1c75",
              "IPY_MODEL_8260431e15d54367acf95cb5b1abd800"
            ],
            "layout": "IPY_MODEL_bd964af153e54555b0b7a39acdbf39f8"
          }
        },
        "9bac0a383e2346a5981f5fd1d5ebdc71": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_fb20601ab7524ecfa873cabedbe539e7",
            "placeholder": "​",
            "style": "IPY_MODEL_2544c35d0e084c65bb3f73e6e55dd25d",
            "value": "Loading checkpoint shards: 100%"
          }
        },
        "78b9a327688346079cc5438fc9ef1c75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9cbea1e2927f42b0a1204a03fdd1e753",
            "max": 3,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_4afcf77ee1d04e9d9e0389e84975a2cf",
            "value": 3
          }
        },
        "8260431e15d54367acf95cb5b1abd800": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5d5e981541c54fe3b484d131d138d571",
            "placeholder": "​",
            "style": "IPY_MODEL_393a1e26ed1940ddaa2d625151362107",
            "value": " 3/3 [00:05&lt;00:00,  1.87s/it]"
          }
        },
        "bd964af153e54555b0b7a39acdbf39f8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fb20601ab7524ecfa873cabedbe539e7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2544c35d0e084c65bb3f73e6e55dd25d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9cbea1e2927f42b0a1204a03fdd1e753": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4afcf77ee1d04e9d9e0389e84975a2cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "5d5e981541c54fe3b484d131d138d571": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "393a1e26ed1940ddaa2d625151362107": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2cb383949748488199072b23c6d24e6a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_cb8f7eab52f14ac6a4aa95d669788294",
              "IPY_MODEL_bbcd54a1823b460c8c7e18282ec7a1aa",
              "IPY_MODEL_0870940008e5427c8e8f7ae14e166e24"
            ],
            "layout": "IPY_MODEL_89ee5282614f43108af67fb34822705a"
          }
        },
        "cb8f7eab52f14ac6a4aa95d669788294": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_6e5741ca482c4da8bf45cb0664548e74",
            "placeholder": "​",
            "style": "IPY_MODEL_64118379272f4c229efbbe542b1f393f",
            "value": "Tokenizing train dataset (num_proc=2): 100%"
          }
        },
        "bbcd54a1823b460c8c7e18282ec7a1aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2a36b959c3564af3a3dac46b71b3a9cb",
            "max": 500,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_08e5cae317c84ee3b5054447fc53579e",
            "value": 500
          }
        },
        "0870940008e5427c8e8f7ae14e166e24": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_db9255dcf6ae4c93a32a713560db6ae6",
            "placeholder": "​",
            "style": "IPY_MODEL_ff33071ad09847e9a9a481ecdcd32227",
            "value": " 500/500 [00:01&lt;00:00, 609.87 examples/s]"
          }
        },
        "89ee5282614f43108af67fb34822705a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6e5741ca482c4da8bf45cb0664548e74": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "64118379272f4c229efbbe542b1f393f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2a36b959c3564af3a3dac46b71b3a9cb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "08e5cae317c84ee3b5054447fc53579e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "db9255dcf6ae4c93a32a713560db6ae6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ff33071ad09847e9a9a481ecdcd32227": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "01182f920c3647b6bd0e9a6a0d7c41b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_5cf13c7f7fa143b1b283be48215f5bf0",
              "IPY_MODEL_d1f823071f684b019f3a8b08e7d5c849",
              "IPY_MODEL_e2ee5ec07660440fab24fd898ea45b4a"
            ],
            "layout": "IPY_MODEL_21ad369d0dba4badb5dae13c3b1a03de"
          }
        },
        "5cf13c7f7fa143b1b283be48215f5bf0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_043551e916774795ad721000651fafd2",
            "placeholder": "​",
            "style": "IPY_MODEL_3a279f1070db4a76ad9fc5347035ea35",
            "value": "Tokenizing train dataset (num_proc=2): 100%"
          }
        },
        "d1f823071f684b019f3a8b08e7d5c849": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_302d135a070c437c85a621c541b592ad",
            "max": 500,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_672884c5be394289b90c956defab3540",
            "value": 500
          }
        },
        "e2ee5ec07660440fab24fd898ea45b4a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9966f5e14af049ca8208b74e8f054670",
            "placeholder": "​",
            "style": "IPY_MODEL_e82265c4046c45dab2797fc12ebd3362",
            "value": " 500/500 [00:00&lt;00:00, 1858.76 examples/s]"
          }
        },
        "21ad369d0dba4badb5dae13c3b1a03de": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "043551e916774795ad721000651fafd2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3a279f1070db4a76ad9fc5347035ea35": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "302d135a070c437c85a621c541b592ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "672884c5be394289b90c956defab3540": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "9966f5e14af049ca8208b74e8f054670": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e82265c4046c45dab2797fc12ebd3362": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "7103c9d51872484e8097b122bb340304": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_eeb7cb3035994ea1becbfaa5e993674f",
              "IPY_MODEL_07f3989e5eb04ea79af9b4951c34d9aa",
              "IPY_MODEL_539f23b3367a42318a8e9177c9614ced"
            ],
            "layout": "IPY_MODEL_f2f1fcc14dcc44d48ba389a2521f6689"
          }
        },
        "eeb7cb3035994ea1becbfaa5e993674f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d0e48f3e85e9484a8537fb01608ab129",
            "placeholder": "​",
            "style": "IPY_MODEL_75959d2ccdfe4875bbca30a5e9279776",
            "value": "README.md: 100%"
          }
        },
        "07f3989e5eb04ea79af9b4951c34d9aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_1866b649a7f2422fbfb5fb44637bb2ef",
            "max": 628,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_b26101e4a4be4bfea5aa8ce960f42f0d",
            "value": 628
          }
        },
        "539f23b3367a42318a8e9177c9614ced": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_58c75a1782ba4490ae006dcb007d9274",
            "placeholder": "​",
            "style": "IPY_MODEL_ea852edb54114ea39ebd344e1caadf1e",
            "value": " 628/628 [00:00&lt;00:00, 57.4kB/s]"
          }
        },
        "f2f1fcc14dcc44d48ba389a2521f6689": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d0e48f3e85e9484a8537fb01608ab129": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "75959d2ccdfe4875bbca30a5e9279776": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1866b649a7f2422fbfb5fb44637bb2ef": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b26101e4a4be4bfea5aa8ce960f42f0d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "58c75a1782ba4490ae006dcb007d9274": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ea852edb54114ea39ebd344e1caadf1e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "23a74fab8b814e35ac70c75162db3dda": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_2902fd1810fe4867aecd338378c39436",
              "IPY_MODEL_0a3859d7f7bb4f1cab585351f0996617",
              "IPY_MODEL_c1bbd2b82c1e4c71b26928380b319ada"
            ],
            "layout": "IPY_MODEL_2c02afe94e2a49fea1fdef04b93d9efe"
          }
        },
        "2902fd1810fe4867aecd338378c39436": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7ba4a6bc2e224aa3b1e9878873bdfdf0",
            "placeholder": "​",
            "style": "IPY_MODEL_d085d775649f45ebb2a70f743275c2cf",
            "value": "adapter_model.safetensors: 100%"
          }
        },
        "0a3859d7f7bb4f1cab585351f0996617": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_961f4da3c4154b74b95ac537c6b173f6",
            "max": 275341720,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_3ce523aef0794d82bb3ae5c9941f9ed8",
            "value": 275341720
          }
        },
        "c1bbd2b82c1e4c71b26928380b319ada": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_63218a9fa63940388fead44a579bc364",
            "placeholder": "​",
            "style": "IPY_MODEL_19e6e786721d47ab9cd839819eafb7ae",
            "value": " 275M/275M [00:05&lt;00:00, 47.3MB/s]"
          }
        },
        "2c02afe94e2a49fea1fdef04b93d9efe": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7ba4a6bc2e224aa3b1e9878873bdfdf0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d085d775649f45ebb2a70f743275c2cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "961f4da3c4154b74b95ac537c6b173f6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3ce523aef0794d82bb3ae5c9941f9ed8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "63218a9fa63940388fead44a579bc364": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "19e6e786721d47ab9cd839819eafb7ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1f82daacdf7240059201267907e5d94c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_b26dcfd1bc464db196293a6bf0f6d593",
              "IPY_MODEL_15c5877496934f518f52b4009a8e9683",
              "IPY_MODEL_269ff419dcdc431ebe379720b010630b"
            ],
            "layout": "IPY_MODEL_a9652dbd275d4154aa77dfe4927fcc01"
          }
        },
        "b26dcfd1bc464db196293a6bf0f6d593": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_cd1bfa6f74f74041bbe331dddd37dc94",
            "placeholder": "​",
            "style": "IPY_MODEL_7a8e06ec93124b36a8b084b39f366fa6",
            "value": "tokenizer.json: 100%"
          }
        },
        "15c5877496934f518f52b4009a8e9683": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_45e10b2815c041388e2d6f51f9b3cb01",
            "max": 11422778,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_d7538ec510c24f3cb21c55bfe01ef5cd",
            "value": 11422778
          }
        },
        "269ff419dcdc431ebe379720b010630b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_693bb4bb0283494eaaece9096f6b47f5",
            "placeholder": "​",
            "style": "IPY_MODEL_da0c1a06db154ce9a0fe137b7f9c9d42",
            "value": " 11.4M/11.4M [00:00&lt;00:00, 76.6MB/s]"
          }
        },
        "a9652dbd275d4154aa77dfe4927fcc01": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cd1bfa6f74f74041bbe331dddd37dc94": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7a8e06ec93124b36a8b084b39f366fa6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "45e10b2815c041388e2d6f51f9b3cb01": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d7538ec510c24f3cb21c55bfe01ef5cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "693bb4bb0283494eaaece9096f6b47f5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "da0c1a06db154ce9a0fe137b7f9c9d42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
